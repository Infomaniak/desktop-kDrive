name: kDrive desktop CI

on:
  workflow_dispatch:  
  pull_request:
    branches-ignore:
        - 'release/**'
    types: [synchronize, review_requested, opened]

concurrency:
  group: kDrive-desktop-ci-${{ github.head_ref }}
  cancel-in-progress: true

env:
  KDRIVE_TEST_CI_API_TOKEN: ${{ secrets.KDRIVE_TOKEN }}
  KDRIVE_TEST_CI_ACCOUNT_ID: ${{ vars.KDRIVE_TEST_CI_ACCOUNT_ID }}
  KDRIVE_TEST_CI_USER_ID: ${{ vars.KDRIVE_TEST_CI_USER_ID }}
  KDRIVE_TEST_CI_DRIVE_ID: ${{ vars.KDRIVE_TEST_CI_DRIVE_ID }}
  KDRIVE_TEST_CI_REMOTE_DIR_ID: ${{ vars.KDRIVE_TEST_CI_REMOTE_DIR_ID }}
  KDRIVE_TEST_CI_LOCAL_PATH: ${{ vars.KDRIVE_TEST_CI_LOCAL_PATH }}
  KDRIVE_TEST_CI_REMOTE_PATH: ${{ vars.KDRIVE_TEST_CI_REMOTE_PATH }}
  KDRIVE_TEST_CI_RUNNING_ON_CI: true


jobs:

# Build apps
  build-Windows:
    uses: ./.github/workflows/build-windows.yml        
    secrets: inherit    
    
  build-Linux:
    if: false
    runs-on: [ self-hosted, Linux, X64, desktop-kdrive ]

    steps:
      - name: Checkout the PR
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.head_ref }}
          submodules: recursive

      - name: Clean the log directory
        run : rm -rf /tmp/kDrive-logdir/*

      - name: Grant building script execute permission
        run : chmod +x ./infomaniak-build-tools/linux/build-ci-amd64.sh
      - name: Build kDrive desktop
        run : ./infomaniak-build-tools/linux/build-ci-amd64.sh -u
      
      - name: Upload build common files
        uses: actions/upload-artifact@v4
        with:
          name: linux-build-common-files
          path: ${{ github.workspace }}/build-linux/build/bin/sync-exclude.lst
          retention-days: 1
        if: always()

      - name: Upload build qt libs
        uses: actions/upload-artifact@v4
        with:
          name: linux-build-qt-libs
          path: |
              /home/runner/Qt/6.2.3/gcc_64/lib/libQt6Widgets.*
              /home/runner/Qt/6.2.3/gcc_64/lib/libQt6Gui.*
              /home/runner/Qt/6.2.3/gcc_64/lib/libQt6Network.*
              /home/runner/Qt/6.2.3/gcc_64/lib/libQt6Sql.*
              /home/runner/Qt/6.2.3/gcc_64/lib/libQt6Core.*
              /home/runner/Qt/6.2.3/gcc_64/lib/libQt6DBus.*
              /home/runner/Qt/6.2.3/gcc_64/lib/libicui18n.*
              /home/runner/Qt/6.2.3/gcc_64/lib/libicuuc.*
              /home/runner/Qt/6.2.3/gcc_64/lib/libicudata.*
              /home/runner/Qt/6.2.3/gcc_64/lib/libQt6Svg.*
          retention-days: 1
        if: always()

      - name: Upload build usr lib
        uses: actions/upload-artifact@v4
        with:
          name: linux-build-usr-lib
          path: |
              /usr/local/lib/libcppunit.so
              /usr/local/lib/libPocoUtil.so
              /usr/local/lib/libPocoJSON.so
              /usr/local/lib/libPocoXML.so
              /usr/local/lib/libPocoFoundation.so
              /usr/local/lib/libPocoNetSSL.so
              /usr/local/lib/libPocoCrypto.so
              /usr/local/lib/libPocoNet.so
              /usr/local/lib/liblog4cplus.so
              /usr/local/lib/libsentry.so
              /usr/local/lib/libzip.so
              /usr/local/lib/libxxhash*
          retention-days: 1
        if: always()

      - name: Upload build test common executable
        uses: actions/upload-artifact@v4
        with:
          name: linux-build-test-common
          path: ${{ github.workspace }}/build-linux/build/bin/kDrive_test_common
          retention-days: 1
        if: always()

      - name: Upload build test common server executable
        uses: actions/upload-artifact@v4
        with:
          name: linux-build-test-common-server
          path: ${{ github.workspace }}/build-linux/build/bin/kDrive_test_common_server
          retention-days: 1
        if: always()

      - name: Upload build test server executable
        uses: actions/upload-artifact@v4
        with:
          name: linux-build-test-server
          path: ${{ github.workspace }}/build-linux/build/bin/kDrive_test_server
          retention-days: 1
        if: always()

      - name: Upload build test syncengine executable
        uses: actions/upload-artifact@v4
        with:
          name: linux-build-test-syncengine
          path: ${{ github.workspace }}/build-linux/build/bin/kDrive_test_syncengine
          retention-days: 1
        if: always()

      - name: Upload build test parms executable
        uses: actions/upload-artifact@v4
        with:
          name: linux-build-test-parms
          path: ${{ github.workspace }}/build-linux/build/bin/kDrive_test_parms
          retention-days: 1
        if: always()

      - name: Clean-up generated code
        run : rm -rf build-linux

  build-MacOS:
    runs-on: [ self-hosted, macOS, desktop-kdrive ]

    steps:
      - name: Clean-up XCode DerivedData
        run : rm -rf /Users/runner/Library/Developer/Xcode/DerivedData
        
      - name: Checkout the code
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.head_ref }}
          submodules: recursive

      - name: Grant empty trash script execute permission
        run : chmod +x ./infomaniak-build-tools/empty_drive_trash.sh
      - name: Empty drive's trash
        run : ./infomaniak-build-tools/empty_drive_trash.sh

      - name: Unlock keychain to use the certificate
        run : security unlock-keychain -p '${{ secrets.KEYCHAIN_PASSWORD }}' login.keychain

      - name: Grant building script execute permission
        run : chmod +x ./infomaniak-build-tools/macos/build-ci.sh

      - name: Build kDrive desktop
        id: build
        run : ./infomaniak-build-tools/macos/build-ci.sh

      - name: Upload build common files
        uses: actions/upload-artifact@v4
        with:
          name: macos-build-common-files
          path: |
              ${{ github.workspace }}/build-macos/client/bin/*.lst
              ${{ github.workspace }}/build-macos/client/bin/*.dylib
          retention-days: 1
        if: steps.build.outcome == 'success'

      - name: Upload frameworks
        uses: actions/upload-artifact@v4
        with:
          name: macos-build-frameworks
          path: |
              ${{ github.workspace }}/build-macos/client/install/kDrive.app/Contents/Frameworks/QtWidgets.framework
              ${{ github.workspace }}/build-macos/client/install/kDrive.app/Contents/Frameworks/QtGui.framework
              ${{ github.workspace }}/build-macos/client/install/kDrive.app/Contents/Frameworks/QtNetwork.framework
              ${{ github.workspace }}/build-macos/client/install/kDrive.app/Contents/Frameworks/QtSql.framework
              ${{ github.workspace }}/build-macos/client/install/kDrive.app/Contents/Frameworks/QtCore.framework
              ${{ github.workspace }}/build-macos/client/install/kDrive.app/Contents/Frameworks/QtSvg.framework
              ${{ github.workspace }}/build-macos/client/install/kDrive.app/Contents/Frameworks/QtDBus.framework
              ${{ github.workspace }}/build-macos/client/install/kDrive.app/Contents/Frameworks/Sparkle.framework
          retention-days: 1
        if: steps.build.outcome == 'success'

      - name: Upload libs
        uses: actions/upload-artifact@v4
        with:
          name: macos-build-libs
          path: |
              /usr/local/lib/libPocoNetSSL.103.dylib
              /usr/local/lib/libPocoUtil.103.dylib
              /usr/local/lib/libPocoJSON.103.dylib
              /usr/local/lib/libPocoXML.103.dylib
              /usr/local/lib/libPocoFoundation.103.dylib
              /usr/local/lib/libPocoNet.103.dylib
              /usr/local/lib/libPocoCrypto.103.dylib
              /usr/local/lib/libcppunit-1.15.2.dylib
              /usr/local/lib/liblog4cplusU.9.dylib
              /usr/local/lib/libsentry.dylib
              /usr/local/lib/libzip.5.dylib
              /usr/local/lib/libzstd.1.dylib
              /usr/local/lib/libssl.3.dylib
              /usr/local/lib/libcrypto.3.dylib
              /usr/local/lib/libxxhash.0.8.2.dylib
          retention-days: 1
        if: steps.build.outcome == 'success'

      - name: Upload build test common executable
        uses: actions/upload-artifact@v4
        with:
          name: macos-build-test-common
          path: ${{ github.workspace }}/build-macos/client/bin/kDrive_test_common
          retention-days: 1
        if: steps.build.outcome == 'success'

      - name: Upload build test common server executable
        uses: actions/upload-artifact@v4
        with:
          name: macos-build-test-common-server
          path: ${{ github.workspace }}/build-macos/client/bin/kDrive_test_common_server
          retention-days: 1
        if: steps.build.outcome == 'success'

      - name: Upload build test server executable
        uses: actions/upload-artifact@v4
        with:
          name: macos-build-test-server
          path: ${{ github.workspace }}/build-macos/client/bin/kDrive_test_server
          retention-days: 1
        if: steps.build.outcome == 'success'

      - name: Upload build test syncengine executable
        uses: actions/upload-artifact@v4
        with:
          name: macos-build-test-syncengine
          path: ${{ github.workspace }}/build-macos/client/bin/kDrive_test_syncengine
          retention-days: 1
        if: steps.build.outcome == 'success'

      - name: Upload build test parms executable
        uses: actions/upload-artifact@v4
        with:
          name: macos-build-test-parms
          path: ${{ github.workspace }}/build-macos/client/bin/kDrive_test_parms
          retention-days: 1
        if: steps.build.outcome == 'success'

      - name: Clean-up generated code
        run : rm -rf build-macos

# Tests Windows
  test-common-Windows:
    runs-on: [ self-hosted, Windows ]
    env:
      KDRIVE_TEST_CI_8MO_PARTITION_PATH: ${{ vars.KDRIVE_TEST_CI_8MO_PARTITION_PATH_WIN }}
    needs: build-Windows
    steps:
      - name: Load system Path into Github environment
        run : echo Path=%Path%>> %GITHUB_ENV%
        shell: cmd

      - name: Checkout the PR
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.head_ref }}

      - name: Clean up log directory
        run: powershell -ExecutionPolicy Bypass -Command "if (Test-Path '$env:TEMP\kDrive-logdir') { Remove-Item -Path '$env:TEMP\kDrive-logdir\*' -Recurse -Force }"

      - name: Load cached dependencies
        id: cache
        uses: herve-er/local-cache@v2
        with:
          path: build-windows/cache
          base: ${{ github.workspace }}/../local-cache
          key: ${{ vars.KDRIVE_TEST_DEPENDENCIES_VERSION }}
          clean-key: true        

      - name: Download common files
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: windows-build-common-files
          path: ${{ github.workspace }}/build-windows/cache/

      - name: Download qt libs
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: windows-build-qt-libs
          path: ${{ github.workspace }}/build-windows/cache/

      - name: Copy the cache to the test directory
        run: cp -r ${{ github.workspace }}/build-windows/cache/ ${{ github.workspace }}/build-windows/test/

      - name: Download test executable
        uses: actions/download-artifact@v4
        with:
          name: windows-build-test-common
          path: ${{ github.workspace }}/build-windows/test/

      - name: Execute tests
        run: powershell ./infomaniak-build-tools/run-test.ps1 ./build-windows/test/ kDrive_test_common.exe

      - name: Copy logs to workspace
        run: |
            $logSource = "$env:TEMP\kDrive-logdir"
            $logDest = "${{ github.workspace }}\build-windows\logs"

            if (Test-Path $logSource) {
              New-Item -ItemType Directory -Force -Path $logDest | Out-Null
              Copy-Item -Path "$logSource\*" -Destination $logDest -Recurse -Force
            } else {
              Write-Output "No logs found to copy."
            }
        if: always()

      - name: Upload tests logs artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-logs-tests-common
          path: ${{ github.workspace }}\build-windows\logs\*
          retention-days: 1
        if: always()

      - name: Clean up
        run : rm -r -force ${{ github.workspace }}/build-windows/test/

  test-commonServer-Windows:
    runs-on: [ self-hosted, Windows, desktop-kdrive]
    env:
      KDRIVE_TEST_CI_8MO_PARTITION_PATH: ${{ vars.KDRIVE_TEST_CI_8MO_PARTITION_PATH_WIN }}
    needs: build-Windows
    steps:
      - name: Load system Path into Github environment
        run : echo Path=%Path%>> %GITHUB_ENV%
        shell: cmd

      - name: Checkout the PR
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.head_ref }}

      - name: Clean up log directory
        run: powershell -ExecutionPolicy Bypass -Command "if (Test-Path '$env:TEMP\kDrive-logdir') { Remove-Item -Path '$env:TEMP\kDrive-logdir\*' -Recurse -Force }"

      - name: Load cached dependencies
        id: cache
        uses: herve-er/local-cache@v2
        with:
          path: build-windows/cache
          base: ${{ github.workspace }}/../local-cache
          key: ${{ vars.KDRIVE_TEST_DEPENDENCIES_VERSION }}
          clean-key: true        

      - name: Download common files
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: windows-build-common-files
          path: ${{ github.workspace }}/build-windows/cache/

      - name: Copy the cache to the test directory
        run: cp -r ${{ github.workspace }}/build-windows/cache/ ${{ github.workspace }}/build-windows/test/

      - name: Download test executable
        uses: actions/download-artifact@v4
        with:
          name: windows-build-test-common-server
          path: ${{ github.workspace }}/build-windows/test/

      - name: Execute tests
        run: powershell ./infomaniak-build-tools/run-test.ps1 ./build-windows/test/ kDrive_test_common_server.exe

      - name: Copy logs to workspace
        run: |
            $logSource = "$env:TEMP\kDrive-logdir"
            $logDest = "${{ github.workspace }}\build-windows\logs"

            if (Test-Path $logSource) {
              New-Item -ItemType Directory -Force -Path $logDest | Out-Null
              Copy-Item -Path "$logSource\*" -Destination $logDest -Recurse -Force
            } else {
              Write-Output "No logs found to copy."
            }
        if: always()

      - name: Upload tests logs artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-logs-tests-commonServer
          path: ${{ github.workspace }}\build-windows\logs\*
          retention-days: 1
        if: always()

      - name: Clean up
        run : rm -r -force ${{ github.workspace }}/build-windows/test/

  test-server-Windows:
    runs-on: [ self-hosted, Windows ]
    env:
      KDRIVE_TEST_CI_8MO_PARTITION_PATH: ${{ vars.KDRIVE_TEST_CI_8MO_PARTITION_PATH_WIN }}
    needs: build-Windows
    steps:
      - name: Load system Path into Github environment
        run : echo Path=%Path%>> %GITHUB_ENV%
        shell: cmd

      - name: Checkout the PR
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.head_ref }}

      - name: Clean up log directory
        run: powershell -ExecutionPolicy Bypass -Command "if (Test-Path '$env:TEMP\kDrive-logdir') { Remove-Item -Path '$env:TEMP\kDrive-logdir\*' -Recurse -Force }"

      - name: Load cached dependencies
        id: cache
        uses: herve-er/local-cache@v2
        with:
          path: build-windows/cache
          base: ${{ github.workspace }}/../local-cache
          key: ${{ vars.KDRIVE_TEST_DEPENDENCIES_VERSION }}
          clean-key: true        

      - name: Download qt libs
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: windows-build-qt-libs
          path: ${{ github.workspace }}/build-windows/cache/

      - name: Download qt plugins
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: windows-build-qt-plugin
          path: ${{ github.workspace }}/build-windows/cache/platforms

      - name: Download common files
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: windows-build-common-files
          path: ${{ github.workspace }}/build-windows/cache/

      - name: Copy the cache to the test directory
        run: cp -r ${{ github.workspace }}/build-windows/cache/ ${{ github.workspace }}/build-windows/test/

      - name: Download test executable
        uses: actions/download-artifact@v4
        with:
          name: windows-build-test-server
          path: ${{ github.workspace }}/build-windows/test/

      - name: Execute tests
        run: powershell ./infomaniak-build-tools/run-test.ps1 ./build-windows/test/ kDrive_test_server.exe 

      - name: Copy logs to workspace
        run: |
            $logSource = "$env:TEMP\kDrive-logdir"
            $logDest = "${{ github.workspace }}\build-windows\logs"

            if (Test-Path $logSource) {
              New-Item -ItemType Directory -Force -Path $logDest | Out-Null
              Copy-Item -Path "$logSource\*" -Destination $logDest -Recurse -Force
            } else {
              Write-Output "No logs found to copy."
            }
        if: always()

      - name: Upload tests logs artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-logs-tests-server
          path: ${{ github.workspace }}\build-windows\logs\*
          retention-days: 1
        if: always()

      - name: Clean up
        run : rm -r -force ${{ github.workspace }}/build-windows/test/

  test-syncengine-Windows:
    runs-on: [ self-hosted, Windows ]
    env:
      KDRIVE_TEST_CI_8MO_PARTITION_PATH: ${{ vars.KDRIVE_TEST_CI_8MO_PARTITION_PATH_WIN }}
    needs: build-Windows
    steps:
      - name: Load system Path into Github environment
        run : echo Path=%Path%>> %GITHUB_ENV%
        shell: cmd

      - name: Checkout the PR
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.head_ref }}

      - name: Clean up log directory
        run: powershell -ExecutionPolicy Bypass -Command "if (Test-Path '$env:TEMP\kDrive-logdir') { Remove-Item -Path '$env:TEMP\kDrive-logdir\*' -Recurse -Force }"

      - name: Load cached dependencies
        id: cache
        uses: herve-er/local-cache@v2
        with:
          path: build-windows/cache
          base: ${{ github.workspace }}/../local-cache
          key: ${{ vars.KDRIVE_TEST_DEPENDENCIES_VERSION }}
          clean-key: true        

      - name: Download qt libs
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: windows-build-qt-libs
          path: ${{ github.workspace }}/build-windows/cache/

      - name: Download common files
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: windows-build-common-files
          path: ${{ github.workspace }}/build-windows/cache/

      - name: Copy the cache to the test directory
        run: cp -r ${{ github.workspace }}/build-windows/cache/ ${{ github.workspace }}/build-windows/test/

      - name: Download test executable
        uses: actions/download-artifact@v4
        with:
          name: windows-build-test-syncengine
          path: ${{ github.workspace }}/build-windows/test/

      - name: Execute tests
        run: powershell ./infomaniak-build-tools/run-test.ps1 ./build-windows/test/ kDrive_test_syncengine.exe

      - name: Copy logs to workspace
        run: |
            $logSource = "$env:TEMP\kDrive-logdir"
            $logDest = "${{ github.workspace }}\build-windows\logs"

            if (Test-Path $logSource) {
              New-Item -ItemType Directory -Force -Path $logDest | Out-Null
              Copy-Item -Path "$logSource\*" -Destination $logDest -Recurse -Force
            } else {
              Write-Output "No logs found to copy."
            }
        if: always()

      - name: Upload tests logs artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-logs-tests-syncengine
          path: ${{ github.workspace }}\build-windows\logs\*
          retention-days: 1
        if: always()

      - name: Clean up
        run : rm -r -force ${{ github.workspace }}/build-windows/test/

  test-parms-Windows:
    runs-on: [ self-hosted, Windows ]
    env:
      KDRIVE_TEST_CI_8MO_PARTITION_PATH: ${{ vars.KDRIVE_TEST_CI_8MO_PARTITION_PATH_WIN }}
    needs: build-Windows
    steps:
      - name: Load system Path into Github environment
        run : echo Path=%Path%>> %GITHUB_ENV%
        shell: cmd

      - name: Checkout the PR
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.head_ref }}

      - name: Clean up log directory
        run: powershell -ExecutionPolicy Bypass -Command "if (Test-Path '$env:TEMP\kDrive-logdir') { Remove-Item -Path '$env:TEMP\kDrive-logdir\*' -Recurse -Force }"

      - name: Download qt libs
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: windows-build-qt-libs
          path: ${{ github.workspace }}/build-windows/cache/

      - name: Load cached dependencies
        id: cache
        uses: herve-er/local-cache@v2
        with:
          path: build-windows/cache
          base: ${{ github.workspace }}/../local-cache
          key: ${{ vars.KDRIVE_TEST_DEPENDENCIES_VERSION }}
          clean-key: true        

      - name: Download common files
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: windows-build-common-files
          path: ${{ github.workspace }}/build-windows/cache/

      - name: Copy the cache to the test directory
        run: cp -r ${{ github.workspace }}/build-windows/cache/ ${{ github.workspace }}/build-windows/test/

      - name: Download test executable
        uses: actions/download-artifact@v4
        with:
          name: windows-build-test-parms
          path: ${{ github.workspace }}/build-windows/test/

      - name: Execute tests
        run: powershell ./infomaniak-build-tools/run-test.ps1 ./build-windows/test/ kDrive_test_parms.exe

      - name: Copy logs to workspace
        run: |
            $logSource = "$env:TEMP\kDrive-logdir"
            $logDest = "${{ github.workspace }}\build-windows\logs"

            if (Test-Path $logSource) {
              New-Item -ItemType Directory -Force -Path $logDest | Out-Null
              Copy-Item -Path "$logSource\*" -Destination $logDest -Recurse -Force
            } else {
              Write-Output "No logs found to copy."
            }
        if: always()

      - name: Upload tests logs artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-logs-tests-parms
          path: ${{ github.workspace }}\build-windows\logs\*
          retention-days: 1
        if: always()

      - name: Clean up
        run : rm -r -force ${{ github.workspace }}/build-windows/test/

# Tests Linux
  test-common-Linux:
    runs-on: [ self-hosted, Linux, X64]
    env:
      KDRIVE_TEST_CI_8MO_PARTITION_PATH: ${{ vars.KDRIVE_TEST_CI_8MO_PARTITION_PATH_LINUX }}
    needs: build-Linux
    steps:
      - name: Checkout the PR
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.head_ref }}

      - name: Clean up log directory
        if: always()
        run : rm -rf /tmp/kDrive-logdir/* || true

      - name: Download common files
        uses: actions/download-artifact@v4
        with:
          name: linux-build-common-files
          path: ${{ github.workspace }}/build-linux/test/

      - name: Load cached dependencies
        id: cache
        uses: herve-er/local-cache@v2
        with:
          path: build-linux/cache
          base: ${{ github.workspace }}/../local-cache
          key: ${{ vars.KDRIVE_TEST_DEPENDENCIES_VERSION }}
          clean-key: true        

      - name: Download usr libs
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: linux-build-usr-lib
          path: ${{ github.workspace }}/build-linux/cache/

      - name: Download QT libs
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: linux-build-qt-libs
          path: ${{ github.workspace }}/build-linux/cache/
          
      - name: Copy the cache to the test directory
        run: cp -r ${{ github.workspace }}/build-linux/cache/* ${{ github.workspace }}/build-linux/test/
        
      - name: Download test executable
        uses: actions/download-artifact@v4
        with:
          name: linux-build-test-common
          path: ${{ github.workspace }}/build-linux/test/

      - name: Grant tests script execute permission
        run : chmod +x ./infomaniak-build-tools/run-test.sh
      - name: Execute tests
        run : |
            export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${{ github.workspace }}/build-linux/test/
            ./infomaniak-build-tools/run-test.sh ./build-linux/test/ kDrive_test_common

      - name: Upload tests logs artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-tests-logs-tests-common
          path: /tmp/kDrive-logdir/*
          retention-days: 1
        if: always()

      - name: Clean up log directory
        if: always()
        run : rm -rf /tmp/kDrive-logdir/* || true

      - name: Clean up
        run : rm -rf ${{ github.workspace }}/build-linux/test/*

  test-commonServer-Linux:
    runs-on: [ self-hosted, Linux, X64 ]
    env:
      KDRIVE_TEST_CI_8MO_PARTITION_PATH: ${{ vars.KDRIVE_TEST_CI_8MO_PARTITION_PATH_LINUX }}
    needs: build-Linux
    steps:
      - name: Checkout the PR
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.head_ref }}

      - name: Clean up log directory
        if: always()
        run : rm -rf /tmp/kDrive-logdir/* || true

      - name: Download common files
        uses: actions/download-artifact@v4
        with:
          name: linux-build-common-files
          path: ${{ github.workspace }}/build-linux/test/

      - name: Load cached dependencies
        id: cache
        uses: herve-er/local-cache@v2
        with:
          path: build-linux/cache
          base: ${{ github.workspace }}/../local-cache
          key: ${{ vars.KDRIVE_TEST_DEPENDENCIES_VERSION }}
          clean-key: true        

      - name: Download usr libs
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: linux-build-usr-lib
          path: ${{ github.workspace }}/build-linux/cache/

      - name: Download QT libs
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: linux-build-qt-libs
          path: ${{ github.workspace }}/build-linux/cache/
          
      - name: Copy the cache to the test directory
        run: cp -r ${{ github.workspace }}/build-linux/cache/* ${{ github.workspace }}/build-linux/test/

      - name: Download test executable
        uses: actions/download-artifact@v4
        with:
          name: linux-build-test-common-server
          path: ${{ github.workspace }}/build-linux/test/

      - name: Grant tests script execute permission
        run : chmod +x ./infomaniak-build-tools/run-test.sh
      - name: Execute tests
        run : |
            export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${{ github.workspace }}/build-linux/test/
            ./infomaniak-build-tools/run-test.sh ./build-linux/test/ kDrive_test_common_server

      - name: Upload tests logs artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-tests-logs-tests-common-server
          path: /tmp/kDrive-logdir/*
          retention-days: 1
        if: always()

      - name: Clean up log directory
        if: always()
        run : rm -rf /tmp/kDrive-logdir/* || true

      - name: Clean up
        run : rm -rf ${{ github.workspace }}/build-linux/test/*

  test-server-Linux:
    runs-on: [ self-hosted, Linux, X64 ]
    env:
      KDRIVE_TEST_CI_8MO_PARTITION_PATH: ${{ vars.KDRIVE_TEST_CI_8MO_PARTITION_PATH_LINUX }}
    needs: build-Linux
    steps:
      - name: Checkout the PR
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.head_ref }}

      - name: Clean up log directory
        if: always()
        run : rm -rf /tmp/kDrive-logdir/* || true

      - name: Download common files
        uses: actions/download-artifact@v4
        with:
          name: linux-build-common-files
          path: ${{ github.workspace }}/build-linux/test/

      - name: Load cached dependencies
        id: cache
        uses: herve-er/local-cache@v2
        with:
          path: build-linux/cache
          base: ${{ github.workspace }}/../local-cache
          key: ${{ vars.KDRIVE_TEST_DEPENDENCIES_VERSION }}
          clean-key: true        

      - name: Download usr libs
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: linux-build-usr-lib
          path: ${{ github.workspace }}/build-linux/cache/

      - name: Download QT libs
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: linux-build-qt-libs
          path: ${{ github.workspace }}/build-linux/cache/
          
      - name: Copy the cache to the test directory
        run: cp -r ${{ github.workspace }}/build-linux/cache/* ${{ github.workspace }}/build-linux/test/

      - name: Download test executable
        uses: actions/download-artifact@v4
        with:
          name: linux-build-test-server
          path: ${{ github.workspace }}/build-linux/test/

      - name: Grant tests script execute permission
        run : chmod +x ./infomaniak-build-tools/run-test.sh
      - name: Execute tests
        run : |
            export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${{ github.workspace }}/build-linux/test/
            ./infomaniak-build-tools/run-test.sh ./build-linux/test/ kDrive_test_server

      - name: Upload tests logs artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-tests-logs-tests-server
          path: /tmp/kDrive-logdir/*
          retention-days: 1
        if: always()

      - name: Clean up log directory
        if: always()
        run : rm -rf /tmp/kDrive-logdir/* || true

      - name: Clean up
        run : rm -rf ${{ github.workspace }}/build-linux/test/*

  test-syncengine-Linux:
    runs-on: [ self-hosted, Linux, X64 ]
    env:
      KDRIVE_TEST_CI_8MO_PARTITION_PATH: ${{ vars.KDRIVE_TEST_CI_8MO_PARTITION_PATH_LINUX }}
    needs: build-Linux
    steps:
      - name: Checkout the PR
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.head_ref }}

      - name: Clean up log directory
        if: always()
        run : rm -rf /tmp/kDrive-logdir/* || true

      - name: Download common files
        uses: actions/download-artifact@v4
        with:
          name: linux-build-common-files
          path: ${{ github.workspace }}/build-linux/test/

      - name: Load cached dependencies
        id: cache
        uses: herve-er/local-cache@v2
        with:
          path: build-linux/cache
          base: ${{ github.workspace }}/../local-cache
          key: ${{ vars.KDRIVE_TEST_DEPENDENCIES_VERSION }}
          clean-key: true        

      - name: Download usr libs
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: linux-build-usr-lib
          path: ${{ github.workspace }}/build-linux/cache/

      - name: Download QT libs
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: linux-build-qt-libs
          path: ${{ github.workspace }}/build-linux/cache/
          
      - name: Copy the cache to the test directory
        run: cp -r ${{ github.workspace }}/build-linux/cache/* ${{ github.workspace }}/build-linux/test/

      - name: Download test executable
        uses: actions/download-artifact@v4
        with:
          name: linux-build-test-syncengine
          path: ${{ github.workspace }}/build-linux/test/

      - name: Grant tests script execute permission
        run : chmod +x ./infomaniak-build-tools/run-test.sh
      - name: Execute tests
        run : |
            export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${{ github.workspace }}/build-linux/test/
            ./infomaniak-build-tools/run-test.sh ./build-linux/test/ kDrive_test_syncengine

      - name: Upload tests logs artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-tests-logs-tests-syncengine
          path: /tmp/kDrive-logdir/*
          retention-days: 1
        if: always()

      - name: Clean up log directory
        if: always()
        run : rm -rf /tmp/kDrive-logdir/* || true

      - name: Clean up
        run : rm -rf ${{ github.workspace }}/build-linux/test/*

  test-parms-Linux:
    runs-on: [ self-hosted, Linux, X64 ]
    env:
      KDRIVE_TEST_CI_8MO_PARTITION_PATH: ${{ vars.KDRIVE_TEST_CI_8MO_PARTITION_PATH_LINUX }}
    needs: build-Linux
    steps:
      - name: Checkout the PR
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.head_ref }}

      - name: Clean up log directory
        if: always()
        run : rm -rf /tmp/kDrive-logdir/* || true

      - name: Download common files
        uses: actions/download-artifact@v4
        with:
          name: linux-build-common-files
          path: ${{ github.workspace }}/build-linux/test/

      - name: Load cached dependencies
        id: cache
        uses: herve-er/local-cache@v2
        with:
          path: build-linux/cache
          base: ${{ github.workspace }}/../local-cache
          key: ${{ vars.KDRIVE_TEST_DEPENDENCIES_VERSION }}
          clean-key: true        

      - name: Download usr libs
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: linux-build-usr-lib
          path: ${{ github.workspace }}/build-linux/cache/

      - name: Download QT libs
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: linux-build-qt-libs
          path: ${{ github.workspace }}/build-linux/cache/
          
      - name: Copy the cache to the test directory
        run: cp -r ${{ github.workspace }}/build-linux/cache/* ${{ github.workspace }}/build-linux/test/

      - name: Download test executable
        uses: actions/download-artifact@v4
        with:
          name: linux-build-test-parms
          path: ${{ github.workspace }}/build-linux/test/

      - name: Grant tests script execute permission
        run : chmod +x ./infomaniak-build-tools/run-test.sh
      - name: Execute tests
        run : |
            export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${{ github.workspace }}/build-linux/test/
            ./infomaniak-build-tools/run-test.sh ./build-linux/test/ kDrive_test_parms

      - name: Upload tests logs artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-tests-logs-tests-parms
          path: /tmp/kDrive-logdir/*
          retention-days: 1
        if: always()

      - name: Clean up log directory
        if: always()
        run : rm -rf /tmp/kDrive-logdir/* || true

# Tests macOS
  test-common-MacOS:
    runs-on: [ self-hosted, macOS]
    env:
      KDRIVE_TEST_CI_8MO_PARTITION_PATH: ${{ vars.KDRIVE_TEST_CI_8MO_PARTITION_PATH_MACOS }}
    needs: build-MacOS
    steps:
      - name: Checkout the PR
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.head_ref }}

      - name: Download common files
        uses: actions/download-artifact@v4
        with:
          name: macos-build-common-files
          path: ${{ github.workspace }}/build-macos/client/bin/

      - name: Load cached dependencies
        id: cache
        uses: herve-er/local-cache@v2
        with:
          path: build-macos/client/cache
          base: ${{ github.workspace }}/../local-cache
          key: ${{ vars.KDRIVE_TEST_DEPENDENCIES_VERSION }}
          clean-key: true

      - name: Download libs
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: macos-build-libs
          path: ${{ github.workspace }}/build-macos/client/cache/

      - name: Download Frameworks
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: macos-build-frameworks
          path: ${{ github.workspace }}/build-macos/client/cache/

      - name: Copy the cache to the build directory
        run: cp -r ${{ github.workspace }}/build-macos/client/cache/* ${{ github.workspace }}/build-macos/client/bin/

      - name: Download test executable
        uses: actions/download-artifact@v4
        with:
          name: macos-build-test-common
          path: ${{ github.workspace }}/build-macos/client/bin/

      - name: Grant tests script execute permission
        run : chmod +x ./infomaniak-build-tools/run-test.sh
      - name: Execute tests
        run : ./infomaniak-build-tools/run-test.sh ./build-macos/client/bin/ kDrive_test_common

      - name: Get the path to kDrive-logdir
        run : echo "logdir_path="$(find /private/var/folders/ -name kDrive-logdir 2>/dev/null)"" >> $GITHUB_ENV
        if  : success() || failure()

      - name: Upload tests logs artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-tests-logs-tests-common
          path: ${{ env.logdir_path }}/*
          retention-days: 1
        if: contains(env.logdir_path, 'kDrive-logdir') && (success() || failure())

      - name: Clean the log directory
        if  : contains(env.logdir_path, 'kDrive-logdir')
        run : rm -rf ${{ env.logdir_path }}/*
        continue-on-error: true

      - name: Clean up
        run : rm -rf ${{ github.workspace }}/build-macos/client/bin/*

  test-commonServer-MacOS:
    runs-on: [ self-hosted, macOS ]
    env:
      KDRIVE_TEST_CI_8MO_PARTITION_PATH: ${{ vars.KDRIVE_TEST_CI_8MO_PARTITION_PATH_MACOS }}
    needs: build-MacOS
    steps:
      - name: Checkout the PR
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.head_ref }}

      - name: Download common files
        uses: actions/download-artifact@v4
        with:
          name: macos-build-common-files
          path: ${{ github.workspace }}/build-macos/client/bin/

      - name: Load cached dependencies
        id: cache
        uses: herve-er/local-cache@v2
        with:
          path: build-macos/client/cache
          base: ${{ github.workspace }}/../local-cache
          key: ${{ vars.KDRIVE_TEST_DEPENDENCIES_VERSION }}
          clean-key: true

      - name: Download libs
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: macos-build-libs
          path: ${{ github.workspace }}/build-macos/client/cache/

      - name: Download Frameworks
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: macos-build-frameworks
          path: ${{ github.workspace }}/build-macos/client/cache/

      - name: Copy the cache to the build directory
        run: cp -r ${{ github.workspace }}/build-macos/client/cache/* ${{ github.workspace }}/build-macos/client/bin/

      - name: Download test executable
        uses: actions/download-artifact@v4
        with:
          name: macos-build-test-common-server
          path: ${{ github.workspace }}/build-macos/client/bin/

      - name: Grant tests script execute permission
        run : chmod +x ./infomaniak-build-tools/run-test.sh
      - name: Execute tests
        run : ./infomaniak-build-tools/run-test.sh ./build-macos/client/bin/ kDrive_test_common_server

      - name: Get the path to kDrive-logdir
        run : echo "logdir_path="$(find /private/var/folders/ -name kDrive-logdir 2>/dev/null)"" >> $GITHUB_ENV
        if  : success() || failure()

      - name: Upload tests logs artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-tests-logs-tests-common-server
          path: ${{ env.logdir_path }}/*
          retention-days: 1
        if: contains(env.logdir_path, 'kDrive-logdir') && (success() || failure())

      - name: Clean the log directory
        if  : contains(env.logdir_path, 'kDrive-logdir')
        run : rm -rf ${{ env.logdir_path }}/*
        continue-on-error: true

      - name: Clean up
        run : rm -rf ${{ github.workspace }}/build-macos/client/bin/*

  test-server-MacOS:
    # Looking for a solution to run this test on any mac without the following error: qt.qpa.plugin: Could not find the Qt platform plugin "cocoa" in "" 
    runs-on: [ self-hosted, macOS, desktop-kdrive ] 
    env:
      KDRIVE_TEST_CI_8MO_PARTITION_PATH: ${{ vars.KDRIVE_TEST_CI_8MO_PARTITION_PATH_MACOS }}
    needs: build-MacOS
    steps:
      - name: Checkout the PR
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.head_ref }}

      - name: Download common files
        uses: actions/download-artifact@v4
        with:
          name: macos-build-common-files
          path: ${{ github.workspace }}/build-macos/client/bin/

      - name: Load cached dependencies
        id: cache
        uses: herve-er/local-cache@v2
        with:
          path: build-macos/client/cache
          base: ${{ github.workspace }}/../local-cache
          key: ${{ vars.KDRIVE_TEST_DEPENDENCIES_VERSION }}
          clean-key: true

      - name: Download libs
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: macos-build-libs
          path: ${{ github.workspace }}/build-macos/client/cache/

      - name: Download Frameworks
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: macos-build-frameworks
          path: ${{ github.workspace }}/build-macos/client/cache/

      - name: Copy the cache to the build directory
        run: cp -r ${{ github.workspace }}/build-macos/client/cache/* ${{ github.workspace }}/build-macos/client/bin/

      - name: Download test executable
        uses: actions/download-artifact@v4
        with:
          name: macos-build-test-server
          path: ${{ github.workspace }}/build-macos/client/bin/

      - name: Grant tests script execute permission
        run : chmod +x ./infomaniak-build-tools/run-test.sh
      - name: Execute tests
        run : ./infomaniak-build-tools/run-test.sh ./build-macos/client/bin/ kDrive_test_server

      - name: Get the path to kDrive-logdir
        run : echo "logdir_path="$(find /private/var/folders/ -name kDrive-logdir 2>/dev/null)"" >> $GITHUB_ENV
        if  : success() || failure()

      - name: Upload tests logs artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-tests-logs-tests-server
          path: ${{ env.logdir_path }}/*
          retention-days: 1
        if: contains(env.logdir_path, 'kDrive-logdir') && (success() || failure())

      - name: Clean the log directory
        if  : contains(env.logdir_path, 'kDrive-logdir')
        run : rm -rf ${{ env.logdir_path }}/*
        continue-on-error: true

      - name: Clean up
        run : rm -rf ${{ github.workspace }}/build-macos/client/bin/*

  test-syncengine-MacOS:
    runs-on: [ self-hosted, macOS]
    env:
      KDRIVE_TEST_CI_8MO_PARTITION_PATH: ${{ vars.KDRIVE_TEST_CI_8MO_PARTITION_PATH_MACOS }}
    needs: build-MacOS
    steps:
      - name: Checkout the PR
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.head_ref }}

      - name: Download common files
        uses: actions/download-artifact@v4
        with:
          name: macos-build-common-files
          path: ${{ github.workspace }}/build-macos/client/bin/

      - name: Load cached dependencies
        id: cache
        uses: herve-er/local-cache@v2
        with:
          path: build-macos/client/cache
          base: ${{ github.workspace }}/../local-cache
          key: ${{ vars.KDRIVE_TEST_DEPENDENCIES_VERSION }}
          clean-key: true

      - name: Download libs
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: macos-build-libs
          path: ${{ github.workspace }}/build-macos/client/cache/

      - name: Download Frameworks
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: macos-build-frameworks
          path: ${{ github.workspace }}/build-macos/client/cache/

      - name: Copy the cache to the build directory
        run: cp -r ${{ github.workspace }}/build-macos/client/cache/* ${{ github.workspace }}/build-macos/client/bin/

      - name: Download test executable
        uses: actions/download-artifact@v4
        with:
          name: macos-build-test-syncengine
          path: ${{ github.workspace }}/build-macos/client/bin/

      - name: Grant tests script execute permission
        run : chmod +x ./infomaniak-build-tools/run-test.sh
      - name: Execute tests
        run : ./infomaniak-build-tools/run-test.sh ./build-macos/client/bin/ kDrive_test_syncengine

      - name: Get the path to kDrive-logdir
        run : echo "logdir_path="$(find /private/var/folders/ -name kDrive-logdir 2>/dev/null)"" >> $GITHUB_ENV
        if  : success() || failure()

      - name: Upload tests logs artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-tests-logs-tests-syncengine
          path: ${{ env.logdir_path }}/*
          retention-days: 1
        if: contains(env.logdir_path, 'kDrive-logdir') && (success() || failure())

      - name: Clean the log directory
        if  : contains(env.logdir_path, 'kDrive-logdir')
        run : rm -rf ${{ env.logdir_path }}/*
        continue-on-error: true

      - name: Clean up
        run : rm -rf ${{ github.workspace }}/build-macos/client/bin/*

  test-parms-MacOS:
    runs-on: [ self-hosted, macOS]
    env:
      KDRIVE_TEST_CI_8MO_PARTITION_PATH: ${{ vars.KDRIVE_TEST_CI_8MO_PARTITION_PATH_MACOS }}
    needs: build-MacOS
    steps:
      - name: Checkout the PR
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.head_ref }}

      - name: Download common files
        uses: actions/download-artifact@v4
        with:
          name: macos-build-common-files
          path: ${{ github.workspace }}/build-macos/client/bin/

      - name: Load cached dependencies
        id: cache
        uses: herve-er/local-cache@v2
        with:
          path: build-macos/client/cache
          base: ${{ github.workspace }}/../local-cache
          key: ${{ vars.KDRIVE_TEST_DEPENDENCIES_VERSION }}
          clean-key: true

      - name: Download libs
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: macos-build-libs
          path: ${{ github.workspace }}/build-macos/client/cache/

      - name: Download Frameworks
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: macos-build-frameworks
          path: ${{ github.workspace }}/build-macos/client/cache/

      - name: Copy the cache to the build directory
        run: cp -r ${{ github.workspace }}/build-macos/client/cache/* ${{ github.workspace }}/build-macos/client/bin/

      - name: Download test executable
        uses: actions/download-artifact@v4
        with:
          name: macos-build-test-parms
          path: ${{ github.workspace }}/build-macos/client/bin/

      - name: Grant tests script execute permission
        run : chmod +x ./infomaniak-build-tools/run-test.sh
      - name: Execute tests
        run : ./infomaniak-build-tools/run-test.sh ./build-macos/client/bin/ kDrive_test_parms

      - name: Get the path to kDrive-logdir
        run : echo "logdir_path="$(find /private/var/folders/ -name kDrive-logdir 2>/dev/null)"" >> $GITHUB_ENV
        if  : success() || failure()

      - name: Upload tests logs artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-tests-logs-tests-parms
          path: ${{ env.logdir_path }}/*
          retention-days: 1
        if: contains(env.logdir_path, 'kDrive-logdir') && (success() || failure())

      - name: Clean the log directory
        if  : contains(env.logdir_path, 'kDrive-logdir')
        run : rm -rf ${{ env.logdir_path }}/*
        continue-on-error: true

      - name: Clean up
        run : rm -rf ${{ github.workspace }}/build-macos/client/bin/*
