name: Linux kDrive desktop CI on x64 Arch

on:
  pull_request: 
    types: [synchronize, review_requested]

concurrency:
  group: linux-${{ github.head_ref }}
  cancel-in-progress: true

env:
  KDRIVE_TEST_CI_API_TOKEN: ${{ secrets.KDRIVE_TOKEN }}
  KDRIVE_TEST_CI_ACCOUNT_ID: ${{ vars.KDRIVE_TEST_CI_ACCOUNT_ID }}
  KDRIVE_TEST_CI_USER_ID: ${{ vars.KDRIVE_TEST_CI_USER_ID }}
  KDRIVE_TEST_CI_DRIVE_ID: ${{ vars.KDRIVE_TEST_CI_DRIVE_ID }}
  KDRIVE_TEST_CI_REMOTE_DIR_ID: ${{ vars.KDRIVE_TEST_CI_REMOTE_DIR_ID }}
  KDRIVE_TEST_CI_LOCAL_PATH: ${{ vars.KDRIVE_TEST_CI_LOCAL_PATH }}
  KDRIVE_TEST_CI_REMOTE_PATH: ${{ vars.KDRIVE_TEST_CI_REMOTE_PATH }}

jobs:
  build-kDrive:
    runs-on: [ self-hosted, Linux, X64, desktop-kdrive ]

    steps:
      - name: Checkout the PR
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.head_ref }}
          submodules: recursive

      - name: Clean the log directory
        run : rm -rf /tmp/kDrive-logdir/*

      - name: Grant building script execute permission
        run : chmod +x ./infomaniak-build-tools/linux/build-ci-amd64.sh

      - name: Build kDrive desktop
        run : | 
          export PATH="/opt/BullseyeCoverage/bin/:${PATH}"
          ./infomaniak-build-tools/linux/build-ci-amd64.sh

      - name: Grant tests script execute permission
        run : chmod +x ./infomaniak-build-tools/run-tests.sh
      
      - name: Execute tests
        run : |
          export PATH="/opt/BullseyeCoverage/bin/:${PATH}"
          ./infomaniak-build-tools/run-tests.sh

      - name: Compute code coverage
        run : |
          PATH="/opt/BullseyeCoverage/bin/:${PATH}"
          rm -f BullseyeCoverageExclusions
          echo "exclude folder 3rdparty/\nexclude folder ../" >> BullseyeCoverageExclusions
          covselect --import BullseyeCoverageExclusions
          covhtml -a coverage_report_dir

      - name: Install sonar-scanner
        uses: sonarsource/sonarqube-github-c-cpp@v1
        env:
          SONAR_HOST_URL: https://sonarcloud.io

      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SONAR_TOKEN: ${{ secrets.DESKTOP_KDRIVE_SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
        run: |
          sonar-scanner --define sonar.projectKey=Infomaniak_desktop-kDrive \
            --define sonar.organization=infomaniak \
            --define sonar.cfamily.bullseye.reportPath=coverage_report_dir

      - name: Upload tests logs artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-tests-logs
          path: /tmp/kDrive-logdir/*
          retention-days: 3
          overwrite: true
        if: always()

      - name: Clean-up generated code
        run : rm -rf build-linux
