name: Release kDrive Desktop Beta (internal)

on:
  workflow_dispatch:  
  pull_request:
    branches-ignore:
        - 'release/**'
    types: [synchronize, opened]

concurrency:
  group: kDrive-desktop-release-${{ github.head_ref }}
  cancel-in-progress: true

env:
  KDRIVE_TEST_CI_API_TOKEN: ${{ secrets.KDRIVE_TOKEN }}
  KDRIVE_TEST_CI_ACCOUNT_ID: ${{ vars.KDRIVE_TEST_CI_ACCOUNT_ID }}
  KDRIVE_TEST_CI_USER_ID: ${{ vars.KDRIVE_TEST_CI_USER_ID }}
  KDRIVE_TEST_CI_DRIVE_ID: ${{ vars.KDRIVE_TEST_CI_DRIVE_ID }}
  KDRIVE_TEST_CI_REMOTE_DIR_ID: ${{ vars.KDRIVE_TEST_CI_REMOTE_DIR_ID }}
  KDRIVE_TEST_CI_LOCAL_PATH: ${{ vars.KDRIVE_TEST_CI_LOCAL_PATH }}
  KDRIVE_TEST_CI_REMOTE_PATH: ${{ vars.KDRIVE_TEST_CI_REMOTE_PATH }}
  KDRIVE_TEST_CI_RUNNING_ON_CI: true
  QT_QPA_PLATFORM: offscreen

jobs:

# Check translation files
  check-translations:
    runs-on: [self-hosted]
    steps:
      - name: Check translations
        run: echo "TODO Check translations..."

# Check Release Notes
  check-release-notes:
    runs-on: [self-hosted]
    steps:
      - name: Check release notes
        run: echo "TODO Check release notes..."

# Build apps
  build-Windows:
    needs: [check-release-notes, check-translations]
    runs-on: [ self-hosted, Windows, desktop-kdrive ]
    outputs:
      kDrive_version: ${{ steps.build-windows-step.kDrive_version }}
    steps:
      - name: Checkout the PR
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Build Windows
        id: build-windows-step
        uses: ./.github/actions/build_windows
        with:  
          virtual_cert_id: ${{ secrets.WINDOWS_VIRTUAL_CERT }}
          virtual_cert_pass: ${{ secrets.WINDOWS_VIRTUAL_CERT_PASSWORD }}
          release_build: true    

# Tests Windows
  test-Windows:
    needs: build-Windows
    strategy:
      fail-fast: false
      matrix:
        test_name: ["kDrive_test_common", "kDrive_test_common_server", "kDrive_test_server", "kDrive_test_syncengine", "kDrive_test_parms"]
    runs-on: [ self-hosted, Windows ]
    env:
      KDRIVE_TEST_CI_LOCAL_PATH: "${{ github.workspace }}/test/test_ci"
      KDRIVE_SENTRY_ENVIRONMENT: "windows_ci_runner"
    steps:
       - name: Checkout the PR
         uses: actions/checkout@v4.1.1
         with:
          ref: ${{ github.head_ref }}

       #- name: Run test
       #  uses: ./.github/actions/test_windows
       #  with:  
       #     test_name: ${{ matrix.test_name }}
       #     test_dependencies_version: ${{ vars.KDRIVE_TEST_DEPENDENCIES_VERSION }}

# Upload the installer to kDrive
  upload-to-kDrive-and-sentry:
    needs: [test-Windows]
    runs-on: [self-hosted, Windows]
    env:
        KDRIVE_TOKEN: ${{ secrets.KDRIVE_TOKEN }}
        KDRIVE_ID: ${{ secrets.KDRIVE_ID }}
        KDRIVE_DIR_ID: ${{ secrets.KDRIVE_DIR_ID }}
    steps:
      - name: Checkout the PR
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.head_ref }}
      
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: build-windows
          pattern: win-release-artifacts-*
          merge-multiple: true

      - name: Upload debug files and installers/appimage to kDrive
        run: powershell ./infomaniak-build-tools/upload-ci.ps1 --version ${{ needs.build-Windows.outputs.kDrive_version }}

      - name : Upload sentry artifacts
        run: |
          Invoke-WebRequest -Uri https://github.com/getsentry/sentry-cli/releases/download/2.46.0/sentry-cli-Windows-x86_64.exe -OutFile sentry-cli.exe
          .\sentry-cli.exe login --auth-token=${{ secrets.SENTRY_AUTH_TOKEN }}
          .\sentry-cli.exe debug-files upload --project kdrive-server .\build-windows\kDrive.pdb
          .\sentry-cli.exe debug-files upload --project kdrive-client .\build-windows\kDrive_client.pdb
          .\sentry-cli.exe debug-files upload --project kdrive-server --type sourcebundle .\build-windows\kDrive.src.zip
          .\sentry-cli.exe debug-files upload --project kdrive-client --type sourcebundle .\build-windows\kDrive_client.src.zip
        shell: powershell

# Upload to the storage server
  upload-app-to-storage-server:
    needs: [upload-to-kDrive-and-sentry]
    runs-on: [self-hosted, Windows]
    steps:
      - name: Upload app to storage server
        run: echo "TODO Upload the app to the storage server..."

# Update kStore
  update-kStore:
    needs: upload-app-to-storage-server
    runs-on: [self-hosted, Windows]
    steps:
      - name: Update kStore
        run: echo "TODO Update kStore..."
