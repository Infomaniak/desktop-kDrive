name: Windows kDrive desktop CI

on:
  workflow_dispatch:  
  pull_request:
    branches-ignore:
        - 'release/**'
    types: [synchronize, review_requested]

concurrency:
  group: windows-${{ github.head_ref }}
  cancel-in-progress: true

env:
  KDRIVE_TEST_CI_API_TOKEN: ${{ secrets.KDRIVE_TOKEN }}
  KDRIVE_TEST_CI_ACCOUNT_ID: ${{ vars.KDRIVE_TEST_CI_ACCOUNT_ID }}
  KDRIVE_TEST_CI_USER_ID: ${{ vars.KDRIVE_TEST_CI_USER_ID }}
  KDRIVE_TEST_CI_DRIVE_ID: ${{ vars.KDRIVE_TEST_CI_DRIVE_ID }}
  KDRIVE_TEST_CI_REMOTE_DIR_ID: ${{ vars.KDRIVE_TEST_CI_REMOTE_DIR_ID }}
  KDRIVE_TEST_CI_LOCAL_PATH: ${{ vars.KDRIVE_TEST_CI_LOCAL_PATH }}
  KDRIVE_TEST_CI_REMOTE_PATH: ${{ vars.KDRIVE_TEST_CI_REMOTE_PATH }}
  KDRIVE_TEST_CI_8MO_PARTITION_PATH: ${{ vars.KDRIVE_TEST_CI_8MO_PARTITION_PATH_WIN }}
  KDRIVE_TEST_CI_RUNNING_ON_CI: true


jobs:
  build-Windows:
    runs-on: [ self-hosted, Windows, desktop-kdrive ]

    steps:
      - name: Load system Path into Github environment
        run : echo Path=%Path%>> %GITHUB_ENV%
        shell: cmd

      - name: Checkout the PR
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.head_ref }}
          submodules: recursive

      - name: Restore extension packages
        run : nuget restore extensions/windows/cfapi/kDriveExt.sln

      - name: Import Windows virtual certificate
        env:
          WINDOWS_VIRTUAL_CERT: ${{ secrets.WINDOWS_VIRTUAL_CERT }}
          WINDOWS_VIRTUAL_CERT_PASSWORD: ${{ secrets.WINDOWS_VIRTUAL_CERT_PASSWORD }}
        run: |
          New-Item -ItemType directory -Path certificate
          Set-Content -Path certificate/tempCert.txt -Value $env:WINDOWS_VIRTUAL_CERT
          certutil -decode certificate/tempCert.txt certificate/certificate.pfx
          Remove-Item -path certificate -include tempCert.txt
          Import-PfxCertificate -FilePath certificate/certificate.pfx -CertStoreLocation Cert:\CurrentUser\My -Password (ConvertTo-SecureString -String $env:WINDOWS_VIRTUAL_CERT_PASSWORD -Force -AsPlainText)

      - name: Build kDrive desktop
        run: |
          call "C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Auxiliary/Build/vcvars64.bat"
          set COVFILE=%cd%\src\test.cov  
          call "cov01.exe" -1

          powershell ./infomaniak-build-tools/windows/build-drive.ps1 -ci
        shell: cmd

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-build-artifacts
          path: C:/actions-runner/_work/desktop-kDrive/desktop-kDrive/build-windows/install/*
          retention-days: 3
          overwrite: true
        if: always()

      - name: Clean-up generated code
        run : powershell ./infomaniak-build-tools/windows/build-drive.ps1 -clean all

  test-common-Windows:
    runs-on: [ self-hosted, Windows, desktop-kdrive ]
    needs: build-Windows
    steps:
      - name: Load system Path into Github environment
        run : echo Path=%Path%>> %GITHUB_ENV%
        shell: cmd

      - name: Checkout the PR
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.head_ref }}
          submodules: recursive
        
      - name: Clean the log directory
        run : rm -r -force C:/Windows/Temp/kDrive-logdir/*

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-build-artifacts
          path: C:/actions-runner/_work/desktop-kDrive/desktop-kDrive/build-windows/install/

      - name: Execute tests
        run: |
          $errors = 0
          $failures = @()

          $file = "kDrive_test_common.exe"
          $path = "build-windows/install/$file"
          Write-Host "---------- Running $file ----------" -ForegroundColor Yellow
          & $path
          if ($LASTEXITCODE -ne 0) {
              Write-Host "---------- Failure: $file ----------" -ForegroundColor Red
              exit 1
          } else {
                  Write-Host "---------- Success: $file ----------" -ForegroundColor Green
          }  

      - name: Upload tests logs artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-tests-logs
          path: C:/Windows/Temp/kDrive-logdir/*
          retention-days: 3
          overwrite: true
        if: always()

      - name: Clean-up generated code
        run : powershell ./infomaniak-build-tools/windows/build-drive.ps1 -clean all
