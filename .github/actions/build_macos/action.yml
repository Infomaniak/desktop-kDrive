name: Build macOS
description: 'Build macOS app'

inputs:
  keychain_password:
    description: 'The password of the keychain'
    required: true

runs:
    using: "composite"
    steps:
      - name: Clean-up XCode DerivedData
        run : rm -rf /Users/runner/Library/Developer/Xcode/DerivedData
        shell: bash

      - name: Grant empty trash script execute permission
        run : chmod +x ./infomaniak-build-tools/empty_drive_trash.sh
        shell: bash

      - name: Empty drive's trash
        run : ./infomaniak-build-tools/empty_drive_trash.sh
        shell: bash

      - name: Unlock keychain to use the certificate
        run : security unlock-keychain -p '${{ inputs.keychain_password }}' login.keychain
        shell: bash

      - name: Grant building script execute permission
        run : chmod +x ./infomaniak-build-tools/macos/build-ci.sh
        shell: bash

      - name: Build kDrive desktop
        id: build
        run : ./infomaniak-build-tools/macos/build-ci.sh
        shell: bash

      - name: Fetch dependencies
        run: |
          mkdir dependencies
          cp -R ${{ github.workspace }}/build-macos/client/install/kDrive.app/Contents/Frameworks/QtWidgets.framework ./dependencies/
          cp -R ${{ github.workspace }}/build-macos/client/install/kDrive.app/Contents/Frameworks/QtGui.framework ./dependencies/
          cp -R ${{ github.workspace }}/build-macos/client/install/kDrive.app/Contents/Frameworks/QtNetwork.framework ./dependencies/
          cp -R ${{ github.workspace }}/build-macos/client/install/kDrive.app/Contents/Frameworks/QtSql.framework ./dependencies/
          cp -R ${{ github.workspace }}/build-macos/client/install/kDrive.app/Contents/Frameworks/QtCore.framework ./dependencies/
          cp -R ${{ github.workspace }}/build-macos/client/install/kDrive.app/Contents/Frameworks/QtSvg.framework ./dependencies/
          cp -R ${{ github.workspace }}/build-macos/client/install/kDrive.app/Contents/Frameworks/QtDBus.framework ./dependencies/
          cp -R ${{ github.workspace }}/build-macos/client/install/kDrive.app/Contents/Frameworks/Sparkle.framework ./dependencies/
          mkdir dependencies/platforms
          cp /Users/runner/Qt/6.2.3/macos/plugins/platforms/libqoffscreen.dylib ./dependencies/platforms/
          cp /usr/local/lib/libPocoNetSSL.103.dylib ./dependencies/
          cp /usr/local/lib/libPocoUtil.103.dylib ./dependencies/
          cp /usr/local/lib/libPocoJSON.103.dylib ./dependencies/
          cp /usr/local/lib/libPocoXML.103.dylib ./dependencies/
          cp /usr/local/lib/libPocoFoundation.103.dylib ./dependencies/
          cp /usr/local/lib/libPocoNet.103.dylib ./dependencies/
          cp /usr/local/lib/libPocoCrypto.103.dylib ./dependencies/
          cp /usr/local/lib/libcppunit-1.15.2.dylib ./dependencies/
          cp /usr/local/lib/libsentry.dylib ./dependencies/
          cp /usr/local/lib/libzip.5.dylib ./dependencies/
          cp /usr/local/lib/libzstd.1.dylib ./dependencies/
          cp /usr/local/lib/libssl.3.dylib ./dependencies/
          cp /usr/local/lib/libcrypto.3.dylib ./dependencies/
          cp ${{ github.workspace }}/build-macos/client/bin/crashpad_handler ./dependencies/
          cp ${{ github.workspace }}/build-macos/client/bin/*.lst ./dependencies/
          cp ${{ github.workspace }}/build-macos/client/bin/*.dylib ./dependencies/
        shell: bash
        if: steps.build.outcome == 'success'

      - name: Fetch Conan dependencies
        run: |
          echo "Fetching Conan dependencies in $HOME/.conan2/p/"
          find "$HOME/.conan2/p/" '(' -iname 'libxxhash.0.dylib' -o -iname 'liblog4cplus*.dylib' ')' \
            -exec cp -P {} ./dependencies/ \; \
            -exec echo "Conan dependency found -> " {} \; 
        shell: bash
        if: steps.build.outcome == 'success'

      - name: Upload build common files
        uses: actions/upload-artifact@v4
        with:
          name: macos-build-common-files
          path: ./dependencies
          retention-days: 1
          compression-level: 0
        if: steps.build.outcome == 'success'

      - name: Upload build test common executable
        uses: actions/upload-artifact@v4
        with:
          name: macos-kDrive_test_common
          path: ${{ github.workspace }}/build-macos/client/bin/kDrive_test_common
          retention-days: 1
          compression-level: 0
        if: steps.build.outcome == 'success'

      - name: Upload build test common server executable
        uses: actions/upload-artifact@v4
        with:
          name: macos-kDrive_test_common_server
          path: ${{ github.workspace }}/build-macos/client/bin/kDrive_test_common_server
          retention-days: 1
          compression-level: 0
        if: steps.build.outcome == 'success'

      - name: Upload build test server executable
        uses: actions/upload-artifact@v4
        with:
          name: macos-kDrive_test_server
          path: ${{ github.workspace }}/build-macos/client/bin/kDrive_test_server
          retention-days: 1
          compression-level: 0
        if: steps.build.outcome == 'success'

      - name: Upload build test syncengine executable
        uses: actions/upload-artifact@v4
        with:
          name: macos-kDrive_test_syncengine
          path: ${{ github.workspace }}/build-macos/client/bin/kDrive_test_syncengine
          retention-days: 1
          compression-level: 0
        if: steps.build.outcome == 'success'

      - name: Upload build test parms executable
        uses: actions/upload-artifact@v4
        with:
          name: macos-kDrive_test_parms
          path: ${{ github.workspace }}/build-macos/client/bin/kDrive_test_parms
          retention-days: 1
          compression-level: 0
        if: steps.build.outcome == 'success'

      - name: Clean-up generated code
        run : rm -rf build-macos
        shell: bash
