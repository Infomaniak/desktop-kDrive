name: Build macOS
description: 'Build macOS app'

runs:
    using: "composite"
    steps:
      - name: Clean the log directory
        run : rm -rf /tmp/kDrive-logdir/*
        shell: bash

      - name: Grant building script execute permission
        run : chmod +x ./infomaniak-build-tools/linux/build-ci-amd64.sh
        shell: bash


      - name: Build kDrive desktop
        id: build
        run: ./infomaniak-build-tools/linux/build-ci-amd64.sh -u -t release
        shell: bash

      - name: Fetch dependencies
        run: |
          mkdir dependencies
          cp ${{ github.workspace }}/build-linux/build/bin/sync-exclude.lst ./dependencies/
          cp /home/runner/Qt/6.2.3/gcc_64/lib/libQt6Widgets.* ./dependencies/ 
          cp /home/runner/Qt/6.2.3/gcc_64/lib/libQt6Gui.* ./dependencies/
          cp /home/runner/Qt/6.2.3/gcc_64/lib/libQt6Network.* ./dependencies/
          cp /home/runner/Qt/6.2.3/gcc_64/lib/libQt6Sql.* ./dependencies/
          cp /home/runner/Qt/6.2.3/gcc_64/lib/libQt6Core.* ./dependencies/
          cp /home/runner/Qt/6.2.3/gcc_64/lib/libQt6DBus.* ./dependencies/
          cp /home/runner/Qt/6.2.3/gcc_64/lib/libicui18n.* ./dependencies/
          cp /home/runner/Qt/6.2.3/gcc_64/lib/libicuuc.* ./dependencies/
          cp /home/runner/Qt/6.2.3/gcc_64/lib/libicudata.* ./dependencies/
          cp /home/runner/Qt/6.2.3/gcc_64/lib/libQt6Svg.* ./dependencies/
          mkdir dependencies/platforms
          cp /home/runner/Qt/6.2.3/gcc_64/plugins/platforms/libqoffscreen.so ./dependencies/platforms/
          cp /usr/local/lib/libcppunit* ./dependencies/ 
          cp /usr/local/lib/libPocoUtil* ./dependencies/
          cp /usr/local/lib/libPocoJSON* ./dependencies/
          cp /usr/local/lib/libPocoXML* ./dependencies/
          cp /usr/local/lib/libPocoFoundation* ./dependencies/
          cp /usr/local/lib/libPocoNetSSL* ./dependencies/
          cp /usr/local/lib/libPocoCrypto* ./dependencies/
          cp /usr/local/lib/libPocoNet* ./dependencies/
          cp /usr/local/lib/libsentry* ./dependencies/
          cp /usr/local/lib/libzip* ./dependencies/
          cp /usr/lib/x86_64-linux-gnu/libglib* ./dependencies/
          cp /usr/lib/x86_64-linux-gnu/libsecret* ./dependencies/
          cp /usr/lib/x86_64-linux-gnu/libgthread* ./dependencies/
          cp /usr/lib/x86_64-linux-gnu/libdbus-1.so.3 ./dependencies/
        shell: bash
        if: steps.build.outcome == 'success'

      - name: Fetch Conan dependencies
        run: |
          echo "Fetching Conan dependencies in $HOME/.conan2/p/"
          find "$HOME/.conan2/p/" '(' -iname 'libxxhash.so' -o -iname 'liblog4cplus.so.9' ')' \
            -exec cp -P {} ./dependencies/ \; \
            -exec echo "Conan dependency found -> " {} \; 
        shell: bash
        if: steps.build.outcome == 'success'

      - name: Upload build common files
        uses: actions/upload-artifact@v4
        with:
          name: linux-build-common-files
          path: ./dependencies/
          retention-days: 1
        if: steps.build.outcome == 'success'

      - name: Upload build test common executable
        uses: actions/upload-artifact@v4
        with:
          name: linux-kDrive_test_common
          path: ${{ github.workspace }}/build-linux/build/bin/kDrive_test_common
          retention-days: 1
        if: steps.build.outcome == 'success'

      - name: Upload build test common server executable
        uses: actions/upload-artifact@v4
        with:
          name: linux-kDrive_test_common_server
          path: ${{ github.workspace }}/build-linux/build/bin/kDrive_test_common_server
          retention-days: 1
        if: steps.build.outcome == 'success'

      - name: Upload build test server executable
        uses: actions/upload-artifact@v4
        with:
          name: linux-kDrive_test_server
          path: ${{ github.workspace }}/build-linux/build/bin/kDrive_test_server
          retention-days: 1
        if: steps.build.outcome == 'success'

      - name: Upload build test syncengine executable
        uses: actions/upload-artifact@v4
        with:
          name: linux-kDrive_test_syncengine
          path: ${{ github.workspace }}/build-linux/build/bin/kDrive_test_syncengine
          retention-days: 1
        if: steps.build.outcome == 'success'

      - name: Upload build test parms executable
        uses: actions/upload-artifact@v4
        with:
          name: linux-kDrive_test_parms
          path: ${{ github.workspace }}/build-linux/build/bin/kDrive_test_parms
          retention-days: 1
        if: steps.build.outcome == 'success'

      - name: Clean-up generated code
        run : rm -rf build-linux
        shell: bash
